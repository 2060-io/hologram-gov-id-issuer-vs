# Service deployment for the Gov ID Issuer App
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Values.name }}
spec:
  selector:
    app: {{ .Values.name }}
  ports:
  - name: q
    port: {{ .Values.backend.port }}
    targetPort: {{ .Values.backend.port }}
    protocol: TCP
---
# Ingress resource for the Gov ID Issuer App
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: public-{{ .Values.name }}
  namespace: {{ .Release.Namespace }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ tpl .Values.ingress.host . }}
      secretName: {{ tpl .Values.ingress.tlsSecret . }}
  rules:
    - host: {{ tpl .Values.ingress.host . }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                 name: {{ .Values.name }}
                 port:
                   number: {{ .Values.backend.port }}
---
# StatefulSet deployment for the Gov ID Issuer App
apiVersion: apps/v1
kind: StatefulSet
metadata:
   name: {{ .Values.name }}
   namespace: {{ .Release.Namespace }}
spec:
   serviceName: {{ .Values.name }}
   replicas: {{ .Values.replicas }}
   selector:
      matchLabels:
         app: {{ .Values.name }}
   template:
      metadata:
         labels:
            app: {{ .Values.name }}
      spec:
         containers:
         -  name: {{ .Values.name }}-backend-container
            image: io2060/hologram-gov-id-issuer-app:{{ .Chart.Version }}
            imagePullPolicy: Always
            env:
            - name: AGENT_PORT
              value: "{{ .Values.backend.port }}"
            - name: SERVICE_AGENT_ADMIN_URL
              value: "{{ .Values.backend.vsAgentAdminUrl }}"
            - name: POSTGRES_HOST
              value: {{ .Values.database.host }}
            - name: POSTGRES_USER
              value: {{ .Values.database.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.database.pwd }}
            - name: VISION_URL
              value: "{{ tpl .Values.backend.vision . }}"
            - name: WEBRTC_SERVER_URL
              value: "{{ tpl .Values.backend.webrtc . }}"
            - name: PUBLIC_BASE_URL
              value: "https://{{ tpl .Values.ingress.host . }}"
            - name: ID_VERIFICATION_TIMEOUT_SECONDS
              value: "{{ .Values.backend.timeout }}"
            - name: LOG_LEVEL
              value: "{{ .Values.backend.logLevel }}"
            ports:
            -  containerPort: {{ .Values.backend.port }}
            livenessProbe:
              httpGet:
                path: /health
                port: {{ .Values.containerPort }}
              initialDelaySeconds: 30
              periodSeconds: 60
              timeoutSeconds: 5
              failureThreshold: 2
            readinessProbe:
              httpGet:
                path: /health
                port: {{ .Values.containerPort }}
              initialDelaySeconds: 15
              periodSeconds: 60
              timeoutSeconds: 5
              failureThreshold: 2
